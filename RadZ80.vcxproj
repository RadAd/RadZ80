<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{13F5674E-684B-46C6-90D2-2A57316B3B18}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <RootNamespace>RadZ80</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)'=='Debug'" Label="Configuration">
    <UseDebugLibraries>true</UseDebugLibraries>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)'=='Release'" Label="Configuration">
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <OutDir>$(SolutionDir)Bin\$(Platform)$(Configuration)\</OutDir>
    <IntDir>Int\$(Platform)$(Configuration)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)'=='Debug'">
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)'=='Release'">
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(APPVEYOR)' == ''">
    <CustomBuildAfterTargets>Build</CustomBuildAfterTargets>
  </PropertyGroup>
  <ItemDefinitionGroup>
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <SDLCheck>true</SDLCheck>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
    </Link>
    <PreBuildEvent>
      <Command Condition="'$(APPVEYOR)' == ''">if defined VSAPPIDDIR set GIT="%VSAPPIDDIR%CommonExtensions\Microsoft\TeamFoundation\Team Explorer\Git\cmd\git.exe"
rem where git &gt; NUL 2&gt;&amp;1 &amp;&amp; set GIT=git &gt; NUL
if exist Z80 (
if not exist Z80.patch.applied (
  echo Applying Z80.patch
  %GIT% -C Z80 apply ..\Z80.patch &amp;&amp; (echo %DATE% %TIME%&gt;Z80.patch.applied)
)
)
</Command>
    </PreBuildEvent>
    <CustomBuildStep Condition="'$(APPVEYOR)' == ''">
      <Command>if exist zmac ( for %%f in (examples\*.asm) do (
  echo Compiling %%f
  zmac\zmac --dotlocals --oo cmd,lst %%f
) )
</Command>
      <Outputs>zout\*.cmd</Outputs>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Platform)'=='Win32'">
    <ClCompile>
      <PreprocessorDefinitions>WIN32;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)'=='Debug'">
    <ClCompile>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions);Z80_STATIC;Z80_WITH_EXECUTE;Z80_WITH_FULL_IM0;Z80_WITH_Q;Z80_WITH_ZILOG_NMOS_LD_A_IR_BUG</PreprocessorDefinitions>
      <AdditionalIncludeDirectories Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(SolutionDir)Zeta\API;$(SolutionDir)Z80\API;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalIncludeDirectories Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(SolutionDir)Zeta\API;$(SolutionDir)Z80\API;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Comctl32.lib;Winmm.lib;$(CoreLibraryDependencies);%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalDependencies Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Comctl32.lib;Winmm.lib;$(CoreLibraryDependencies);%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)'=='Release'">
    <ClCompile>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions);Z80_STATIC;Z80_WITH_EXECUTE;Z80_WITH_FULL_IM0;Z80_WITH_Q;Z80_WITH_ZILOG_NMOS_LD_A_IR_BUG</PreprocessorDefinitions>
      <AdditionalIncludeDirectories Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(SolutionDir)Zeta\API;$(SolutionDir)Z80\API;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalIncludeDirectories Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(SolutionDir)Zeta\API;$(SolutionDir)Z80\API;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Comctl32.lib;Winmm.lib;$(CoreLibraryDependencies);%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalDependencies Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Comctl32.lib;Winmm.lib;$(CoreLibraryDependencies);%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="src\BreakpointWnd.cpp" />
    <ClCompile Include="src\DisassemblyWnd.cpp" />
    <ClCompile Include="src\EditPlus.c" />
    <ClCompile Include="src\ListViewPlus.c" />
    <ClCompile Include="src\Machine.cpp" />
    <ClCompile Include="src\RegistersDlg.cpp" />
    <ClCompile Include="src\MemWnd.cpp" />
    <ClCompile Include="src\RadZ80.cpp" />
    <ClCompile Include="src\TerminalWnd.cpp" />
    <ClCompile Include="src\WindowMgr.cpp" />
    <ClCompile Include="src\WindowsPlus.c" />
    <ClCompile Include="src\z80_disassembler.c" />
    <ClCompile Include="Z80\sources\Z80.c" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="src\BreakpointWnd.h" />
    <ClInclude Include="src\DisassemblyWnd.h" />
    <ClInclude Include="src\EditPlus.h" />
    <ClInclude Include="src\ListViewPlus.h" />
    <ClInclude Include="src\ListViewVector.h" />
    <ClInclude Include="src\Machine.h" />
    <ClInclude Include="src\RegistersDlg.h" />
    <ClInclude Include="src\MemWnd.h" />
    <ClInclude Include="src\resource.h" />
    <ClInclude Include="src\TerminalWnd.h" />
    <ClInclude Include="src\Utils.h" />
    <ClInclude Include="src\WindowMgr.h" />
    <ClInclude Include="src\WindowsPlus.h" />
    <ClInclude Include="Z80\API\Z80.h" />
  </ItemGroup>
  <ItemGroup>
    <ResourceCompile Include="src\RadZ80.rc" />
  </ItemGroup>
  <ItemGroup>
    <None Include="examples\helloworld.asm" />
  </ItemGroup>
  <ItemGroup>
    <Image Include="res\z80.ico" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>